<!--JDR: Add this to referens static methods for UserAccount-->
@using Bank.Models;
@model Bank.ViewModels.Account_Edit_VM

@{ ViewBag.Title = "Edit"; }

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="bank-header">Profile Update</div>

<div class="form-horizontal  form-gray-box">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        <label class="control-label col-md-2">Full Name</label>
        <div style="padding-top: 7px; margin-bottom: 0;" class="col-md-10">@UserAccount.Get("Name")</div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Email</label>
        <div style="padding-top: 7px; margin-bottom: 0;" class="col-md-10">@UserAccount.Get("Email")</div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Telephone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.Telephone, new { htmlAttributes = new { @class = "phone form-control" } })
            @Html.ValidationMessageFor(model => model.Telephone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <!--JDR: Set lable for all address fields-->
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <!--JDR: Set input for all address fields-->
        <div class="col-md-9">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control col-md-2", placeholder = "Address" } })      <!--JDR: Had to hardecode placeholder, would prefeer to use the DisplayName in model-->
        </div>
        <div class="col-md-3 col-md-offset-2">
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control col-md-2", placeholder = "City" } })      <!--JDR: Had to hardecode placeholder, would prefeer to use the DisplayName in model-->
        </div>
        <div class="col-md-3">
            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control col-md-2", placeholder = "State" } })      <!--JDR: Had to hardecode placeholder, would prefeer to use the DisplayName in model-->
        </div>
        <div class="col-md-3">
            @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control col-md-2", placeholder = "Zip" } })      <!--JDR: Had to hardecode placeholder, would prefeer to use the DisplayName in model-->
        </div>

        <!--JDR: Set validation for all name fields-->
        <div class="col-md-10  col-md-offset-2 text-danger">
            @Html.ValidationMessageFor(model => model.Address, "", new { })
            @Html.ValidationMessageFor(model => model.City, "", new { })
            @Html.ValidationMessageFor(model => model.State, "", new { })
            @Html.ValidationMessageFor(model => model.Zip, "", new { })
        </div>
    </div>

    <div class="row">
        <div class="col-md-offset-2 col-md-9">
            <input type="submit" value="Update" class="btn bank-yellow-btn" />
        </div>
    </div>
</div>
}
